#!/usr/bin/env node

var path = require('path');
var browser = require('openurl');
var argv = require('minimist')(process.argv.slice(2));
var pkg = require('../package.json');

var URI = require('../lib').URI;
var Store = require('../lib').Store;
var Utilities = require('../lib').Utilities;

var db = path.join(Utilities.getUsersHome(), '.' + pkg.name);

function handleError(err) {
    if (err) {
        console.error('\x1b[31m' + err.toString() + '\x1b[39m');

        process.exit(1);
    }
}

function store () {
    var key = argv._[0];
    var namespace = argv._[1];

    URI.exists(namespace, function onExists (err) {
        handleError(err);

        Store.instantiate(db).put(key, namespace, function onPut (err) {
            handleError(err);
        
            console.log('\x1b[32mSaved!\x1b[39m');

            process.exit(0);
        });
    });
}

function read () {
    var key = argv._[0];

    Store.instantiate(db).get(key, function onGet (err, namespace) {
        var uri;

        handleError(err);

        if (!isNaN(Number(argv.i)) || !isNaN(Number(argv.issue))) {
            uri = URI.issues(namespace, (argv.i || argv.issue));
        } else {
            uri = URI.code(namespace);
        }

        browser.open(uri);
    });
}

function list () {
    Store.instantiate(db).getAll(function onGetAll (err, data) {
        var prop;
    
        handleError(err);
        
        for (prop in data) {
            if (data.hasOwnProperty(prop)) {
                console.log('%s: %s', prop, data[prop]);
            }
        }
    });
}

function usage () {
    var msg = 'usage:\n\n' +

        '\t' + pkg.name + ' alias [namespace] [options]\n\n' +
        
        'options: \n\n' +
            '\t-i, --issue: Open up a specific issue in the browser. \n' +
            '\t-l, --list: Lists all saved aliases.\n' +
            '\t-h, --help: Print this usage information.\n' +
            '\t-v, --version: Version information\n\n' +
        
        'usage examples: \n\n' + 

            '\t' + pkg.name + ' [alias] [namespace] \n' +
                '\t\tWill create an alias of the given GitHub namespace (e.g. "' + pkg.name + ' im akoenig/imacss").\n\n' +

            '\t' + pkg.name + ' [alias] \n' +
                '\t\tWill open the GitHub project page in your default browser (e.g. "' + pkg.name + ' im").\n\n' +

            '\t' + pkg.name + ' [alias] --issue 10 \n' +
                '\t\tWill open the issue 10 (e.g. "' + pkg.name + ' im -i 10").\n';
        
            
    console.log(msg);

    process.exit(0);
}

function other () {
    if (argv.l || argv.list) {
        list();
    } else if (argv.h || argv.help) {
        usage();
    } else if (argv.v || argv.version) {
        console.log(pkg.version);

        process.exit(0);
    } else {
        usage();
    }
}

switch (argv._.length) {
    case 2:
        store();
    break;
        
    case 1:
        read();
    break;
    
    default:
        other();
}